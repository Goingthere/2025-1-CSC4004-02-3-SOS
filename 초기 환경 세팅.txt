[SOS 프로젝트 초기 세팅 가이드]
=============================

GitHub에서 레포지토리를 클론한 후, 각자 로컬 환경에 프로젝트를 설정하고 개발을 시작하기 위한 안내입니다.
Django가 Node.js가 설치되지 않은 상태라고 가정하고 순서대로 따라오면 됩니다.

📁 폴더 구조
------------------------------------------------------------------------------
SOS/
├── backend/      ← Django 백엔드
├── frontend/     ← React 프론트엔드
├── ml_model/     ← 추후 머신러닝 모델 개발용 (현재 비어 있음)
├── 그 외 .gitignore, .env 등 파일


1. [공통] GitHub 레포지토리 클론
------------------------------------------------------------------------------
Git이 설치되어 있어야 합니다 (https://git-scm.com)

> 프로젝트를 진행할 폴더에서 아래 명령어 실행:

git clone https://github.com/Goingthere/2025-1-CSC4004-02-3-SOS.git

로컬 프로젝트가 제대로 생성되었으면 develop 브랜치에서 브랜치 분기시켜 개발 작업 시작하면 됨.
새 브랜치가 원격 저장소에 없는 경우 git push -u origin feat/KEJ-login 이런 식으로 원격 저장소에도 브랜치 생성을 해주면 됨.
한 번 해두면 그 브랜치는 다음부터는 git push만 쳐도 됨.


2. [백엔드 세팅 - Django]
------------------------------------------------------------------------------
1) Python 설치
   - Python 3.9.4 설치 : https://www.python.org <- 3.9.4로 백엔드 구축할 예정이라 가능하면 버전 맞춰주세요(3.8~3.10 정도의 범위에 있으면 웬만하면 괜찮습니다)
   - 설치 시 "Add to PATH" 체크 필수

2) 가상환경 생성 및 실행
cd backend
python -m venv venv    <- 가상환경 venv 생성(초기 세팅 때 1번만 하면 됨)
venv\Scripts\activate   <- 가상환경 실행 커맨드(백엔드 구조 다룰 때 항상 가상환경 진입 필요)
가상환경을 벗어나고 싶으면 deactivate 명령어 입력

3) 필요한 패키지 설치(requirement.txt에 나열되어 있음)
pip install -r requirements.txt

만약 개발 도중 백엔드 쪽에서 새 패키지를 추가하여 requirements.txt를 갱신해야 한다면
pip freeze > requirements.txt
명령어로 자동 갱신, 그 후 팀원에게 갱신했으니 자기 브랜치 merge하거나 했을 때 다시 pip install -r requirements.txt 실행해야 한다고 꼭 알리기

4) 개발 서버 실행 (확인용)
python manage.py runserver
→ 브라우저에서 http://127.0.0.1:8000 열고 서버 잘 돌아가는지 확인
서버 닫을 때는 ctrl+d 누르기


3. [프론트엔드 세팅 - React]
------------------------------------------------------------------------------
1) Node.js 설치
   - 버전: 22.15.1 LTS (https://nodejs.org 홈페이지 들어가면 바로 있는 버전)
   - 설치 시 npm 자동 포함됨

2) React 의존성 설치
cd ../frontend
npm install

만약 개발 도중 프론트엔드 쪽에서 새 패키지를 추가하였다면 다른 팀원들에게 변동사항 있다고 꼭 알리고,
나머지 팀원이 해당 브랜치를 실제로 merge 받아 사용할 때
npm install
명령어만 치면 알아서 패키지 정보 가져와 자동으로 설치됨

3) React 개발 서버 실행
npm start
→ 브라우저에서 http://localhost:3000 열면 초기 react 화면 떠야 함
서버 닫을 때는 ctrl+c 누르고 y입력해서 종료


4. [기타 참고사항]
------------------------------------------------------------------------------
- `node_modules/`, `venv/`, `db.sqlite3` 등은 각자 로컬에 따로 존재해야 하므로 덮어씌워지는 것을 방지하기 위해 git에 올라가지 않게 설정해야 함(.gitignore에 추가되어 있음)
- 추후 mysql 연동 후 `.env` 파일을 각자 로컬에 수동으로 작성하여 mysql 정보 세팅 예정(backend/.env). 해당 파일도 .gitignore에 추가하여 git에 올라가지 않도록 설정해야 함
